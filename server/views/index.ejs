<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta http-equiv="X-UA-Compatible" content="ie=edge">
    <title>EnergyMap</title>
    <link rel="stylesheet" href="/stylesheets/style.css">
    <link rel="icon" href="/images/favicon.ico" type="image/x-icon">
    
    <script type="text/javascript" src="https://www.gstatic.com/charts/loader.js"></script>
    <script type="text/javascript">
      google.charts.load("current", {
        packages: ["geochart"]
      });
      google.charts.setOnLoadCallback(() => {
        drawRegionsMap();
      });
      
      const test_data = [
          ["Country", "Solar", "Nuclear", "Hydro Water Reservoir", "WindOffshore", "FossilGas"],
          ["Germany", 200, 500, 800, 600, 10000],
          ["Sweden", 300, 600, 700, 800, 1000],
          ["France", 400, 500, 300, 200, 100],
          ["Italy", 200, 400, 500, 600, 10],
          ["Spain", 300, 200, 400, 500, 0],
          ["Greece", 400, 500, 600, 700, 0],
        ];

      let input_data = JSON.parse('<%- data %>');
      //let values= <%- data %>
      // let values = JSON.parse('<%- data %>');

      function drawRegionsMap(input_data) {
        // where data will be stored within the map

        console.log(input_data);

        // Check that the google.visualization object is defined
        if (!google.visualization) {
          console.error("Google Visualization API not loaded");
          return;
        }

        // Convert the input data to a DataTable
        var data = google.visualization.arrayToDataTable(buildTable());

        // Options for the map
        var options = {
          region: "150", //europe
          backgroundColor: "#212969",
          colorAxis: {minValue: 0, scaleType: 'log'},
          datalessRegionColor: "#a6a6a6",
        };

        // Create the map and render it in the specified container
        var container = document.getElementById("regions_div");
        var map = new google.visualization.GeoChart(container);
        map.draw(data, options);
      }

      // find the column index of the requested energy type
      function findCol(value) {
        for (var i = 0; i < input_data[0].length; i++) {
          if (input_data[0][i] == value) {
            return i;
          }
        }
        // if there is no data return -1
        console.info("No data for energy type", "\"" + energyType.value + "\"");
        return -1;
      }

      function buildTable() {
        var table = [];
        var col = findCol(energyType.value);
        // if there is no data for the energy type return a table with no data
        if (col === -1) {
          table.push([input_data[0][0], "no-data"]);
        }
        // else if there is data and the scale is set to linear build a new table 
        // with only the column for the country names and the requested energy type
        else if (scale.value == "Linear") {
          table.push([input_data[0][0], input_data[0][col] + " [MW]"]);
          for (var i = 1; i < input_data.length; i++) {
            table.push([input_data[i][0], input_data[i][col]]);
          }
        }
        // else the scale is set to logarithmic, the data value is now an object with
        // a value v that is log10 of the original value and a formatted value f that
        // v is used for the color scale, f is used for the tooltip
        else {
          table.push([input_data[0][0], input_data[0][col] + " [MW]"]);
          for (var i = 1; i < input_data.length; i++) {
            let value = {v: Math.log10(input_data[i][col]), f: input_data[i][col]};
            table.push([input_data[i][0], value]);
          }
        }
        console.log(table);
        return table;
      }
    </script>
  </head>
  <body>
    <div>
      <div class="index-container">
        <h1 class="index-text">Welcome to EnergyMap</h1>
        <div class="index-container1">
          <div class="index-container2">
            <div class="index-goe">
              <div id="regions_div" style="width: 80%; height: 80%"></div>
            </div>
          </div>
          <div class="index-container3">
            <form>
              <label for="energyType">Choose an energyType:</label>
              <select name="energyType" id="energyType">
                <option value="Mixed">Mixed</option>
                <option value="Generation">Generation</option>
                <option value="Load">Load</option>
                <option value="Biomass">Biomass</option>
                <option value="Fossil Brown coal/Lignite">Fossil Brown coal/Lignite</option>
                <option value="Fossil Coal-derived gas">Fossil Coal-derived gas</option>
                <option value="Fossil Gas">Fossil Gas</option>
                <option value="Fossil Hard coal">Fossil HardCoal</option>
                <option value="Fossil Oil">Fossil Oil</option>
                <option value="Fossil Oil shale">Fossil Oil Shale</option>
                <option value="Fossil Peat">Fossil Peat</option>
                <option value="Geothermal">Geothermal</option>
                <option value="Hydro Pumped Storage">Hydro Pumped Storage</option>
                <option value="Hydro Run-of-river and poundage">Hydro Run-of-river and poundage</option>
                <option value="Hydro Water Reservoir">Hydro Water Reservoir</option>
                <option value="Marine">Marine</option>
                <option value="Nuclear">Nuclear</option>
                <option value="Solar" selected="selected">Solar</option>
                <option value="Waste">Waste</option>
                <option value="Wind Offshore">Wind Offshore</option>
                <option value="Wind Onshore">Wind Onshore</option>
                <option value="Other renewable">Other renewable</option>
                <option value="Other">Other</option>
              </select>
            </form>

            <form>
              <label for="colorScale">Chose color scale (tooltip always shows real value):</label>
              <select name="colorScale" id="colorScale">
                <option value="Linear" selected="selected">Linear</option>
                <option value="Logarithmic">Logarithmic</option>
              </select>
            </form>
          </div>
        </div>
      </div>
    </div>

    <script src="index.js"></script>
    <script>
      // update the map if the user changes the energy type or the color scale
      var scale = document.getElementById("colorScale");
      var energyType = document.getElementById("energyType");
      function onChange() {
        console.info("Selected:", scale.value, energyType.value);
        drawRegionsMap();
      }
      scale.onchange = onChange;
      energyType.onchange = onChange;
      onChange();
    </script>
    <!-- <div class="center_regions">
      <div class="regions_div" id="regions_div"></div>
    </div> -->
  </body>
</html>
