on:
  push:
    branches: [ "dev" ]
  pull_request:
    branches: [ "dev" ]


env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}
    

jobs:
  test:
    name: Test on node ${{ matrix.node-version }} and ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        node-version: [14.x, 16.x, 18.x]
        os: [ubuntu-latest]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/
    #container: node:16
    steps:
      - run: node --version
      - run: npm --version
      - uses: actions/checkout@v3
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          # cache: 'npm'
          # cache-dependency-path: 'server/package-lock.json'
      - name: Install dependencies
        run: npm install
        working-directory: server
      - name: Build the app
        run: npm run build
        working-directory: server
      #- name: Run start
      #  run: npm run start --if-present
      #  working-directory: server
      #- name: Run tests
      #  run: npm test
      #  working-directory: server

  dockertest:
    name: Test Docker image
    runs-on: ubuntu-latest

    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Login to GitHub Packages
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
          
      - id: string
        uses: ASzc/change-string-case-action@v5
        with:
          string: ${{ env.IMAGE_NAME }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.REGISTRY }}/${{ steps.string.outputs.lowercase }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          load: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

      - name: Run Docker container
        run: docker run --rm -d ${{ env.REGISTRY }}/${{ steps.string.outputs.lowercase }}
        env:
          TOKEN: ${{ secrets.TOKEN }}

      - name: Check Docker container status
        run: docker ps
        
      - name: Exit with success code
        run: exit 0

