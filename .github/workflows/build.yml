on:
  push:
    branches: [ "dev" ]
  pull_request:
    branches: [ "dev" ]

permissions:
  packages: write

jobs:
  test:
    name: Test on node ${{ matrix.node-version }} and ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        node-version: [14.x, 16.x, 18.x]
        os: [ubuntu-latest]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/
    #container: node:16
    steps:
      - run: node --version
      - run: npm --version
      - uses: actions/checkout@v3
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          # cache: 'npm'
          # cache-dependency-path: 'server/package-lock.json'
      - name: Install dependencies
        run: npm install
        working-directory: server
      - name: Build the app
        run: npm run build
        working-directory: server
      #- name: Run start
      #  run: npm run start --if-present
      #  working-directory: server
      #- name: Run tests
      #  run: npm test
      #  working-directory: server

  dockertest:
    name: Test Docker image
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Login to GitHub Packages
        uses: docker/login-action@v1
        with:
          registry: docker.pkg.github.com
          username: ${{ github.actor }}
          password: ${{ secrets.ACCESS_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          tags: dat257-team4/energymap/energymap:latest

      - name: Run Docker container
        run: docker-compose up -d
        env:
          TOKEN: ${{ secrets.TOKEN }}
      - name: Check Docker container status
        run: docker-compose ps
      - name: Exit with success code
        run: exit 0

